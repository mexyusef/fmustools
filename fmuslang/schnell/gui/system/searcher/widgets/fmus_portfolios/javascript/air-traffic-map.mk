--% index/fmus
__INPUT__,d
    index.html
    script.js
    style.css
    data,d
        country-codes.json,f(e=__FILE__=country-code)
    icons,d
        icon.png,f(e=__FILE__=icons/icon.png)
--#

--% icons/icon.png

--#


--% index.html
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Air Traffic Map</title>
    <link rel="icon" type="image/png" href="icons/icon.png" />
    <link rel="stylesheet" href="style.css" />
  </head>
  <body>
    <div class="wrapper">
      <header>
        <div class="header__container">
          <h1 class="header__title">Real-Time Air Traffic</h1>
        </div>
      </header>

      <div id="map"></div>

      <div class="select-forms">
        <select id="select-planes">
          <option value="all">All flags aircraft</option>
        </select>
      </div>

      <div class="countries-chart">
        <div class="countries-chart__container">
          <canvas id="planeByCountriesChart"></canvas>
        </div>
      </div>
    </div>

    <script
      defer
      src="https://maps.googleapis.com/maps/api/js?libraries=visualization&callback=initMap"
    ></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-deferred@2.0.0/dist/chartjs-plugin-deferred.min.js"></script>
    <script src="script.js"></script>
  </body>
</html>
--#

--% script.js
// This example requires the Visualization library. Include the libraries=visualization
// parameter when you first load the API. For example:
// <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=visualization">

let map, heatmap;
let planesByFlag = {};
let countryCodes;
let chart;
Chart.defaults.font.size = 14;

const flagsSelect = document.getElementById('select-planes');
let gradient = [
    "rgba(142, 114, 194, 0.1)",
    "rgba(58, 28, 113, 1)",
    "rgba(58, 28, 113, 1)",
    "rgba(58, 28, 113, 1)",
    "rgba(58, 28, 113, 1)",
    "rgba(58, 28, 113, 1)",
    "rgba(77, 28, 169, 1)",
    "rgba(194, 26, 220, 1)",
    "rgba(194, 26, 220, 1)",
    "rgba(194, 26, 220, 1)",
    "rgba(216, 74, 88, 1)",
    "rgba(216, 74, 88, 1)",
    "rgba(216, 74, 88, 1)",
    "rgba(216, 74, 88, 1)",
    "rgba(223, 25, 25, 1)",
    "rgba(223, 25, 25, 1)",

];


fetch('./data/country-codes.json')
    .then((response) => response.json())
    .then((json) => countryCodes = json);


function initMap() {
    map = new google.maps.Map(document.getElementById("map"), {
        zoom: 3,
        center: { lat: 33.749374, lng: 10.451329 },
        // center: { lat: 30, lng: 0 },
        mapId: "abdf9465a5f0e4c7",
    });

    map.addListener("maptypeid_changed", () => {
        if (map.getMapTypeId() !== "roadmap") {
            heatmap.set("gradient", null);
        } else {
            heatmap.set("gradient", gradient);
        }
    })
    getPoints();
}




function getPoints(specialFlag = null) {
    let url;
    if (specialFlag && specialFlag != 'all') {
        url = `https://airlabs.co/api/v9/flights?api_key=8acc5d02-45ec-4547-ac4c-fc53fd8724d1&flag=${specialFlag}`;
    } else {
        url = "https://airlabs.co/api/v9/flights?api_key=8acc5d02-45ec-4547-ac4c-fc53fd8724d1";
    }


    fetch(url.toString())
        .then(response => response.json())
        .then(data => {
            createHeatmap(data);
        })
        .catch(e => {
            console.log(e);
        })
}

const createHeatmap = (data) => {
    let points = [];
    for (const plane of data.response) {
        points.push(new google.maps.LatLng(plane.lat, plane.lng));
        if (plane.flag) {
            if (plane.flag == "UK" || plane.flag == "GB") {
                plane.flag = "GB&flag=UK"
            }
            if (plane.flag in planesByFlag) {
                planesByFlag[plane.flag] += 1;
            } else {
                planesByFlag[plane.flag] = 1;
            }
        }
    }

    if (heatmap) {
        heatmap.setData(points);
    } else {
        heatmap = new google.maps.visualization.HeatmapLayer({
            data: points,
            map: map,
            radius: 12,
            gradient: gradient
        });
        updatePlanesSelect();
        loadChart();
    }
}

const updatePlanesSelect = () => {
    let flags = Object.keys(planesByFlag);
    flags.sort((flag_a, flag_b) => planesByFlag[flag_b] - planesByFlag[flag_a]);

    for (const flagCode of flags) {
        let country = countryCodes.filter(country => country.code == flagCode)[0];

        if (country) {
            flagsSelect.appendChild(new Option(`${country.name} - ${planesByFlag[flagCode]}`, flagCode));
        } else {
            flagsSelect.appendChild(new Option(`${flagCode} - ${planesByFlag[flagCode]}`, flagCode));
        }
    }

}




flagsSelect.addEventListener('change', (event) => {
    let select = event.target;
    getPoints(select.value);
})

// window.initMap = initMap;

const loadChart = () => {
    let width = window.innerWidth;
    let showOptions = 7;

    if (width <= 350) {
        showOptions = 3;
    }
    else if (width <= 500) {
        showOptions = 4;
    }
    else if (width <= 672) {
        showOptions = 5;
    }
    else if (width <= 768) {
        showOptions = 6;
    }

    let allFlags = Object.keys(planesByFlag);
    allFlags.sort((flag_a, flag_b) => planesByFlag[flag_b] - planesByFlag[flag_a]);

    const flags = allFlags.slice(0, showOptions);

    let labels = flags.map(flagCode => countryCodes.filter(country => country.code == flagCode)[0].name);
    let planeNumbers = allFlags.slice(0, 7).map(flagCode => planesByFlag[flagCode])

    const data = {
        labels: labels,
        datasets: [{
            axis: 'y',
            label: 'Planes by the flag',
            backgroundColor: 'rgba(66, 25, 148, 1)',
            data: planeNumbers,
            inflateAmount: -3,
            borderRadius: 3,
            hoverBackgroundColor: 'rgba(109, 56, 214, 0.8)'

        }]
    };

    const config = {
        type: 'bar',
        data: data,
        plugins: [ChartDeferred],
        options: {
            indexAxis: 'y',
            plugins: {
                deferred: {
                    xOffset: 150,   // defer until 150px of the canvas width are inside the viewport
                    yOffset: '50%', // defer until 50% of the canvas height are inside the viewport
                }
            },
            transitions: {
                show: {
                    animations: {
                        x: {
                            from: 0
                        }
                    }
                },
                hide: {
                    animations: {
                        x: {
                            to: 0
                        },
                    }
                }
            },
            animations: {
                y: { duration: 0 }
            },

        }
    };

    chart = new Chart(
        document.getElementById('planeByCountriesChart'),
        config
    );
}

const updateLegend = () => {
    let width = window.innerWidth;
    let showOptions = 7;

    if (width <= 350) {
        showOptions = 3;
    }
    else if (width <= 500) {
        showOptions = 4;
    }
    else if (width <= 672) {
        showOptions = 5;
    }
    else if (width <= 768) {
        showOptions = 6;
    }

    let allFlags = Object.keys(planesByFlag);
    allFlags.sort((flag_a, flag_b) => planesByFlag[flag_b] - planesByFlag[flag_a]);
    const flags = allFlags.slice(0, showOptions);

    let labels = flags.map(flagCode => countryCodes.filter(country => country.code == flagCode)[0].name);

    chart.data.labels = labels;
    chart.update();
}

window.addEventListener('resize', updateLegend);
--#

--% style.css
@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@200;300;400;500&display=swap');

html {
    scroll-behavior: smooth;
}

:root {
    color-scheme: dark;
}

body {
    background-color: rgb(7, 4, 16);
    font-family: 'Montserrat', sans-serif;
    margin: 0;
    overflow-x: hidden;
}

[class*="__container"] {
    max-width: 1082px;
    margin: 0 auto;
    padding: 0 15px;
}

.wrapper {
    overflow: hidden;
    min-height: 100%;
}

.header__title {
    color: #fff;
    text-align: center;
    font-size: 32px;
    font-weight: 500;
}

@media (max-width: 455px) {
    .header__title {
        font-size: 25px;
    }
}

#map {
    height: 80vh;
    width: 100%;
    margin: 0 auto;
}

.select-forms {
    margin-top: 4vh;
    padding-bottom: 100px;
    display: flex;
    justify-content: center;
}

select {
    background-color: #232529;
    color: rgb(210, 211, 218);
    border: thin solid rgba(0, 0, 255, 0.398);
    border-radius: 6px;
    display: inline-block;
    font-family: inherit;
    font-size: 16px;
    line-height: 1.5em;
    padding: 0.5em 3.5em 0.5em 1em;

    max-width: 370px;
    width: 100%;
}

select:focus {
    outline: none;
}

select option {
    font-family: inherit;
    font-size: 15px;
    font-weight: 300;
}
--#

--% country-code
[
{
    "code": "AD",
    "code3": "AND",
    "name": "Andorra"
},
{
    "code": "AE",
    "code3": "ARE",
    "name": "United Arab Emirates"
},
{
    "code": "AF",
    "code3": "AFG",
    "name": "Afghanistan"
},
{
    "code": "AG",
    "code3": "ATG",
    "name": "Antigua and Barbuda"
},
{
    "code": "AI",
    "code3": "AIA",
    "name": "Anguilla"
},
{
    "code": "AL",
    "code3": "ALB",
    "name": "Albania"
},
{
    "code": "AM",
    "code3": "ARM",
    "name": "Armenia"
},
{
    "code": "AN",
    "code3": "ANT",
    "name": "Netherlands Antilles"
},
{
    "code": "AO",
    "code3": "AGO",
    "name": "Angola"
},
{
    "code": "AQ",
    "code3": "ATA",
    "name": "Antarctica"
},
{
    "code": "AR",
    "code3": "ARG",
    "name": "Argentina"
},
{
    "code": "AS",
    "code3": "ASM",
    "name": "American Samoa"
},
{
    "code": "AT",
    "code3": "AUT",
    "name": "Austria"
},
{
    "code": "AU",
    "code3": "AUS",
    "name": "Australia"
},
{
    "code": "AW",
    "code3": "ABW",
    "name": "Aruba"
},
{
    "code": "AX",
    "code3": "ALA",
    "name": "Aland Islands"
},
{
    "code": "AZ",
    "code3": "AZE",
    "name": "Azerbaijan"
},
{
    "code": "BA",
    "code3": "BIH",
    "name": "Bosnia and Herzegovina"
},
{
    "code": "BB",
    "code3": "BRB",
    "name": "Barbados"
},
{
    "code": "BD",
    "code3": "BGD",
    "name": "Bangladesh"
},
{
    "code": "BE",
    "code3": "BEL",
    "name": "Belgium"
},
{
    "code": "BF",
    "code3": "BFA",
    "name": "Burkina Faso"
},
{
    "code": "BG",
    "code3": "BGR",
    "name": "Bulgaria"
},
{
    "code": "BH",
    "code3": "BHR",
    "name": "Bahrain"
},
{
    "code": "BI",
    "code3": "BDI",
    "name": "Burundi"
},
{
    "code": "BJ",
    "code3": "BEN",
    "name": "Benin"
},
{
    "code": "BL",
    "code3": "BLM",
    "name": "Saint Barthelemy"
},
{
    "code": "BM",
    "code3": "BMU",
    "name": "Bermuda"
},
{
    "code": "BN",
    "code3": "BRN",
    "name": "Brunei"
},
{
    "code": "BO",
    "code3": "BOL",
    "name": "Bolivia"
},
{
    "code": "BQ",
    "code3": "BES",
    "name": "Bonaire, Saint Eustatius and Saba "
},
{
    "code": "BR",
    "code3": "BRA",
    "name": "Brazil"
},
{
    "code": "BS",
    "code3": "BHS",
    "name": "Bahamas"
},
{
    "code": "BT",
    "code3": "BTN",
    "name": "Bhutan"
},
{
    "code": "BV",
    "code3": "BVT",
    "name": "Bouvet Island"
},
{
    "code": "BW",
    "code3": "BWA",
    "name": "Botswana"
},
{
    "code": "BY",
    "code3": "BLR",
    "name": "Belarus"
},
{
    "code": "BZ",
    "code3": "BLZ",
    "name": "Belize"
},
{
    "code": "CA",
    "code3": "CAN",
    "name": "Canada"
},
{
    "code": "CC",
    "code3": "CCK",
    "name": "Cocos Islands"
},
{
    "code": "CD",
    "code3": "COD",
    "name": "Democratic Republic of the Congo"
},
{
    "code": "CF",
    "code3": "CAF",
    "name": "Central African Republic"
},
{
    "code": "CG",
    "code3": "COG",
    "name": "Republic of the Congo"
},
{
    "code": "CH",
    "code3": "CHE",
    "name": "Switzerland"
},
{
    "code": "CI",
    "code3": "CIV",
    "name": "Ivory Coast"
},
{
    "code": "CK",
    "code3": "COK",
    "name": "Cook Islands"
},
{
    "code": "CL",
    "code3": "CHL",
    "name": "Chile"
},
{
    "code": "CM",
    "code3": "CMR",
    "name": "Cameroon"
},
{
    "code": "CN",
    "code3": "CHN",
    "name": "China"
},
{
    "code": "CO",
    "code3": "COL",
    "name": "Colombia"
},
{
    "code": "CR",
    "code3": "CRI",
    "name": "Costa Rica"
},
{
    "code": "CS",
    "code3": "SCG",
    "name": "Serbia and Montenegro"
},
{
    "code": "CU",
    "code3": "CUB",
    "name": "Cuba"
},
{
    "code": "CV",
    "code3": "CPV",
    "name": "Cabo Verde"
},
{
    "code": "CW",
    "code3": "CUW",
    "name": "Curacao"
},
{
    "code": "CX",
    "code3": "CXR",
    "name": "Christmas Island"
},
{
    "code": "CY",
    "code3": "CYP",
    "name": "Cyprus"
},
{
    "code": "CZ",
    "code3": "CZE",
    "name": "Czechia"
},
{
    "code": "DE",
    "code3": "DEU",
    "name": "Germany"
},
{
    "code": "DJ",
    "code3": "DJI",
    "name": "Djibouti"
},
{
    "code": "DK",
    "code3": "DNK",
    "name": "Denmark"
},
{
    "code": "DM",
    "code3": "DMA",
    "name": "Dominica"
},
{
    "code": "DO",
    "code3": "DOM",
    "name": "Dominican Republic"
},
{
    "code": "DZ",
    "code3": "DZA",
    "name": "Algeria"
},
{
    "code": "EC",
    "code3": "ECU",
    "name": "Ecuador"
},
{
    "code": "EE",
    "code3": "EST",
    "name": "Estonia"
},
{
    "code": "EG",
    "code3": "EGY",
    "name": "Egypt"
},
{
    "code": "EH",
    "code3": "ESH",
    "name": "Western Sahara"
},
{
    "code": "ER",
    "code3": "ERI",
    "name": "Eritrea"
},
{
    "code": "ES",
    "code3": "ESP",
    "name": "Spain"
},
{
    "code": "ET",
    "code3": "ETH",
    "name": "Ethiopia"
},
{
    "code": "FI",
    "code3": "FIN",
    "name": "Finland"
},
{
    "code": "FJ",
    "code3": "FJI",
    "name": "Fiji"
},
{
    "code": "FK",
    "code3": "FLK",
    "name": "Falkland Islands"
},
{
    "code": "FM",
    "code3": "FSM",
    "name": "Micronesia"
},
{
    "code": "FO",
    "code3": "FRO",
    "name": "Faroe Islands"
},
{
    "code": "FR",
    "code3": "FRA",
    "name": "France"
},
{
    "code": "GA",
    "code3": "GAB",
    "name": "Gabon"
},
{
    "code": "GB&flag=UK",
    "code3": "GBR",
    "name": "United Kingdom"
},

{
    "code": "GD",
    "code3": "GRD",
    "name": "Grenada"
},
{
    "code": "GE",
    "code3": "GEO",
    "name": "Georgia"
},
{
    "code": "GF",
    "code3": "GUF",
    "name": "French Guiana"
},
{
    "code": "GG",
    "code3": "GGY",
    "name": "Guernsey"
},
{
    "code": "GH",
    "code3": "GHA",
    "name": "Ghana"
},
{
    "code": "GI",
    "code3": "GIB",
    "name": "Gibraltar"
},
{
    "code": "GL",
    "code3": "GRL",
    "name": "Greenland"
},
{
    "code": "GM",
    "code3": "GMB",
    "name": "Gambia"
},
{
    "code": "GN",
    "code3": "GIN",
    "name": "Guinea"
},
{
    "code": "GP",
    "code3": "GLP",
    "name": "Guadeloupe"
},
{
    "code": "GQ",
    "code3": "GNQ",
    "name": "Equatorial Guinea"
},
{
    "code": "GR",
    "code3": "GRC",
    "name": "Greece"
},
{
    "code": "GS",
    "code3": "SGS",
    "name": "South Georgia and the South Sandwich Islands"
},
{
    "code": "GT",
    "code3": "GTM",
    "name": "Guatemala"
},
{
    "code": "GU",
    "code3": "GUM",
    "name": "Guam"
},
{
    "code": "GW",
    "code3": "GNB",
    "name": "Guinea-Bissau"
},
{
    "code": "GY",
    "code3": "GUY",
    "name": "Guyana"
},
{
    "code": "HK",
    "code3": "HKG",
    "name": "Hong Kong"
},
{
    "code": "HM",
    "code3": "HMD",
    "name": "Heard Island and McDonald Islands"
},
{
    "code": "HN",
    "code3": "HND",
    "name": "Honduras"
},
{
    "code": "HR",
    "code3": "HRV",
    "name": "Croatia"
},
{
    "code": "HT",
    "code3": "HTI",
    "name": "Haiti"
},
{
    "code": "HU",
    "code3": "HUN",
    "name": "Hungary"
},
{
    "code": "ID",
    "code3": "IDN",
    "name": "Indonesia"
},
{
    "code": "IE",
    "code3": "IRL",
    "name": "Ireland"
},
{
    "code": "IL",
    "code3": "ISR",
    "name": "Israel"
},
{
    "code": "IM",
    "code3": "IMN",
    "name": "Isle of Man"
},
{
    "code": "IN",
    "code3": "IND",
    "name": "India"
},
{
    "code": "IO",
    "code3": "IOT",
    "name": "British Indian Ocean Territory"
},
{
    "code": "IQ",
    "code3": "IRQ",
    "name": "Iraq"
},
{
    "code": "IR",
    "code3": "IRN",
    "name": "Iran"
},
{
    "code": "IS",
    "code3": "ISL",
    "name": "Iceland"
},
{
    "code": "IT",
    "code3": "ITA",
    "name": "Italy"
},
{
    "code": "JE",
    "code3": "JEY",
    "name": "Jersey"
},
{
    "code": "JM",
    "code3": "JAM",
    "name": "Jamaica"
},
{
    "code": "JO",
    "code3": "JOR",
    "name": "Jordan"
},
{
    "code": "JP",
    "code3": "JPN",
    "name": "Japan"
},
{
    "code": "KE",
    "code3": "KEN",
    "name": "Kenya"
},
{
    "code": "KG",
    "code3": "KGZ",
    "name": "Kyrgyzstan"
},
{
    "code": "KH",
    "code3": "KHM",
    "name": "Cambodia"
},
{
    "code": "KI",
    "code3": "KIR",
    "name": "Kiribati"
},
{
    "code": "KM",
    "code3": "COM",
    "name": "Comoros"
},
{
    "code": "KN",
    "code3": "KNA",
    "name": "Saint Kitts and Nevis"
},
{
    "code": "KP",
    "code3": "PRK",
    "name": "North Korea"
},
{
    "code": "KR",
    "code3": "KOR",
    "name": "South Korea"
},
{
    "code": "KW",
    "code3": "KWT",
    "name": "Kuwait"
},
{
    "code": "KY",
    "code3": "CYM",
    "name": "Cayman Islands"
},
{
    "code": "KZ",
    "code3": "KAZ",
    "name": "Kazakhstan"
},
{
    "code": "LA",
    "code3": "LAO",
    "name": "Laos"
},
{
    "code": "LB",
    "code3": "LBN",
    "name": "Lebanon"
},
{
    "code": "LC",
    "code3": "LCA",
    "name": "Saint Lucia"
},
{
    "code": "LI",
    "code3": "LIE",
    "name": "Liechtenstein"
},
{
    "code": "LK",
    "code3": "LKA",
    "name": "Sri Lanka"
},
{
    "code": "LR",
    "code3": "LBR",
    "name": "Liberia"
},
{
    "code": "LS",
    "code3": "LSO",
    "name": "Lesotho"
},
{
    "code": "LT",
    "code3": "LTU",
    "name": "Lithuania"
},
{
    "code": "LU",
    "code3": "LUX",
    "name": "Luxembourg"
},
{
    "code": "LV",
    "code3": "LVA",
    "name": "Latvia"
},
{
    "code": "LY",
    "code3": "LBY",
    "name": "Libya"
},
{
    "code": "MA",
    "code3": "MAR",
    "name": "Morocco"
},
{
    "code": "MC",
    "code3": "MCO",
    "name": "Monaco"
},
{
    "code": "MD",
    "code3": "MDA",
    "name": "Moldova"
},
{
    "code": "ME",
    "code3": "MNE",
    "name": "Montenegro"
},
{
    "code": "MF",
    "code3": "MAF",
    "name": "Saint Martin"
},
{
    "code": "MG",
    "code3": "MDG",
    "name": "Madagascar"
},
{
    "code": "MH",
    "code3": "MHL",
    "name": "Marshall Islands"
},
{
    "code": "MK",
    "code3": "MKD",
    "name": "North Macedonia"
},
{
    "code": "ML",
    "code3": "MLI",
    "name": "Mali"
},
{
    "code": "MM",
    "code3": "MMR",
    "name": "Myanmar"
},
{
    "code": "MN",
    "code3": "MNG",
    "name": "Mongolia"
},
{
    "code": "MO",
    "code3": "MAC",
    "name": "Macao"
},
{
    "code": "MP",
    "code3": "MNP",
    "name": "Northern Mariana Islands"
},
{
    "code": "MQ",
    "code3": "MTQ",
    "name": "Martinique"
},
{
    "code": "MR",
    "code3": "MRT",
    "name": "Mauritania"
},
{
    "code": "MS",
    "code3": "MSR",
    "name": "Montserrat"
},
{
    "code": "MT",
    "code3": "MLT",
    "name": "Malta"
},
{
    "code": "MU",
    "code3": "MUS",
    "name": "Mauritius"
},
{
    "code": "MV",
    "code3": "MDV",
    "name": "Maldives"
},
{
    "code": "MW",
    "code3": "MWI",
    "name": "Malawi"
},
{
    "code": "MX",
    "code3": "MEX",
    "name": "Mexico"
},
{
    "code": "MY",
    "code3": "MYS",
    "name": "Malaysia"
},
{
    "code": "MZ",
    "code3": "MOZ",
    "name": "Mozambique"
},
{
    "code": "NA",
    "code3": "NAM",
    "name": "Namibia"
},
{
    "code": "NC",
    "code3": "NCL",
    "name": "New Caledonia"
},
{
    "code": "NE",
    "code3": "NER",
    "name": "Niger"
},
{
    "code": "NF",
    "code3": "NFK",
    "name": "Norfolk Island"
},
{
    "code": "NG",
    "code3": "NGA",
    "name": "Nigeria"
},
{
    "code": "NI",
    "code3": "NIC",
    "name": "Nicaragua"
},
{
    "code": "NL",
    "code3": "NLD",
    "name": "Netherlands"
},
{
    "code": "NO",
    "code3": "NOR",
    "name": "Norway"
},
{
    "code": "NP",
    "code3": "NPL",
    "name": "Nepal"
},
{
    "code": "NR",
    "code3": "NRU",
    "name": "Nauru"
},
{
    "code": "NU",
    "code3": "NIU",
    "name": "Niue"
},
{
    "code": "NZ",
    "code3": "NZL",
    "name": "New Zealand"
},
{
    "code": "OM",
    "code3": "OMN",
    "name": "Oman"
},
{
    "code": "PA",
    "code3": "PAN",
    "name": "Panama"
},
{
    "code": "PE",
    "code3": "PER",
    "name": "Peru"
},
{
    "code": "PF",
    "code3": "PYF",
    "name": "French Polynesia"
},
{
    "code": "PG",
    "code3": "PNG",
    "name": "Papua New Guinea"
},
{
    "code": "PH",
    "code3": "PHL",
    "name": "Philippines"
},
{
    "code": "PK",
    "code3": "PAK",
    "name": "Pakistan"
},
{
    "code": "PL",
    "code3": "POL",
    "name": "Poland"
},
{
    "code": "PM",
    "code3": "SPM",
    "name": "Saint Pierre and Miquelon"
},
{
    "code": "PN",
    "code3": "PCN",
    "name": "Pitcairn"
},
{
    "code": "PR",
    "code3": "PRI",
    "name": "Puerto Rico"
},
{
    "code": "PS",
    "code3": "PSE",
    "name": "Palestinian Territory"
},
{
    "code": "PT",
    "code3": "PRT",
    "name": "Portugal"
},
{
    "code": "PW",
    "code3": "PLW",
    "name": "Palau"
},
{
    "code": "PY",
    "code3": "PRY",
    "name": "Paraguay"
},
{
    "code": "QA",
    "code3": "QAT",
    "name": "Qatar"
},
{
    "code": "RE",
    "code3": "REU",
    "name": "Reunion"
},
{
    "code": "RO",
    "code3": "ROU",
    "name": "Romania"
},
{
    "code": "RS",
    "code3": "SRB",
    "name": "Serbia"
},
{
    "code": "RU",
    "code3": "RUS",
    "name": "Russia"
},
{
    "code": "RW",
    "code3": "RWA",
    "name": "Rwanda"
},
{
    "code": "SA",
    "code3": "SAU",
    "name": "Saudi Arabia"
},
{
    "code": "SB",
    "code3": "SLB",
    "name": "Solomon Islands"
},
{
    "code": "SC",
    "code3": "SYC",
    "name": "Seychelles"
},
{
    "code": "SD",
    "code3": "SDN",
    "name": "Sudan"
},
{
    "code": "SE",
    "code3": "SWE",
    "name": "Sweden"
},
{
    "code": "SG",
    "code3": "SGP",
    "name": "Singapore"
},
{
    "code": "SH",
    "code3": "SHN",
    "name": "Saint Helena"
},
{
    "code": "SI",
    "code3": "SVN",
    "name": "Slovenia"
},
{
    "code": "SJ",
    "code3": "SJM",
    "name": "Svalbard and Jan Mayen"
},
{
    "code": "SK",
    "code3": "SVK",
    "name": "Slovakia"
},
{
    "code": "SL",
    "code3": "SLE",
    "name": "Sierra Leone"
},
{
    "code": "SM",
    "code3": "SMR",
    "name": "San Marino"
},
{
    "code": "SN",
    "code3": "SEN",
    "name": "Senegal"
},
{
    "code": "SO",
    "code3": "SOM",
    "name": "Somalia"
},
{
    "code": "SR",
    "code3": "SUR",
    "name": "Suriname"
},
{
    "code": "SS",
    "code3": "SSD",
    "name": "South Sudan"
},
{
    "code": "ST",
    "code3": "STP",
    "name": "Sao Tome and Principe"
},
{
    "code": "SV",
    "code3": "SLV",
    "name": "El Salvador"
},
{
    "code": "SX",
    "code3": "SXM",
    "name": "Sint Maarten"
},
{
    "code": "SY",
    "code3": "SYR",
    "name": "Syria"
},
{
    "code": "SZ",
    "code3": "SWZ",
    "name": "Eswatini"
},
{
    "code": "TC",
    "code3": "TCA",
    "name": "Turks and Caicos Islands"
},
{
    "code": "TD",
    "code3": "TCD",
    "name": "Chad"
},
{
    "code": "TF",
    "code3": "ATF",
    "name": "French Southern Territories"
},
{
    "code": "TG",
    "code3": "TGO",
    "name": "Togo"
},
{
    "code": "TH",
    "code3": "THA",
    "name": "Thailand"
},
{
    "code": "TJ",
    "code3": "TJK",
    "name": "Tajikistan"
},
{
    "code": "TK",
    "code3": "TKL",
    "name": "Tokelau"
},
{
    "code": "TL",
    "code3": "TLS",
    "name": "Timor Leste"
},
{
    "code": "TM",
    "code3": "TKM",
    "name": "Turkmenistan"
},
{
    "code": "TN",
    "code3": "TUN",
    "name": "Tunisia"
},
{
    "code": "TO",
    "code3": "TON",
    "name": "Tonga"
},
{
    "code": "TR",
    "code3": "TUR",
    "name": "Turkey"
},
{
    "code": "TT",
    "code3": "TTO",
    "name": "Trinidad and Tobago"
},
{
    "code": "TV",
    "code3": "TUV",
    "name": "Tuvalu"
},
{
    "code": "TW",
    "code3": "TWN",
    "name": "Taiwan"
},
{
    "code": "TZ",
    "code3": "TZA",
    "name": "Tanzania"
},
{
    "code": "UA",
    "code3": "UKR",
    "name": "Ukraine"
},
{
    "code": "UG",
    "code3": "UGA",
    "name": "Uganda"
},
{
    "code": "UM",
    "code3": "UMI",
    "name": "United States Minor Outlying Islands"
},
{
    "code": "US",
    "code3": "USA",
    "name": "United States"
},
{
    "code": "UY",
    "code3": "URY",
    "name": "Uruguay"
},
{
    "code": "UZ",
    "code3": "UZB",
    "name": "Uzbekistan"
},
{
    "code": "VA",
    "code3": "VAT",
    "name": "Vatican"
},
{
    "code": "VC",
    "code3": "VCT",
    "name": "Saint Vincent and the Grenadines"
},
{
    "code": "VE",
    "code3": "VEN",
    "name": "Venezuela"
},
{
    "code": "VG",
    "code3": "VGB",
    "name": "British Virgin Islands"
},
{
    "code": "VI",
    "code3": "VIR",
    "name": "U.S. Virgin Islands"
},
{
    "code": "VN",
    "code3": "VNM",
    "name": "Vietnam"
},
{
    "code": "VU",
    "code3": "VUT",
    "name": "Vanuatu"
},
{
    "code": "WF",
    "code3": "WLF",
    "name": "Wallis and Futuna"
},
{
    "code": "WS",
    "code3": "WSM",
    "name": "Samoa"
},
{
    "code": "XK",
    "code3": "XKX",
    "name": "Kosovo"
},
{
    "code": "YE",
    "code3": "YEM",
    "name": "Yemen"
},
{
    "code": "YT",
    "code3": "MYT",
    "name": "Mayotte"
},
{
    "code": "ZA",
    "code3": "ZAF",
    "name": "South Africa"
},
{
    "code": "ZM",
    "code3": "ZMB",
    "name": "Zambia"
},
{
    "code": "ZW",
    "code3": "ZWE",
    "name": "Zimbabwe"
}
]
--#
