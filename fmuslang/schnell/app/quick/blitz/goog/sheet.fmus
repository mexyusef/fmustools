
--% sheet/simple1/us
.,d
	?pick
		main.py,f(e=__FILE=sheet/simple1/main.py)
	$* python main.py
--#


--% sheet/simple1/main.py
"""
https://developers.google.com/sheets/api/quickstart/python
https://github.com/googleworkspace/python-samples/blob/master/sheets/quickstart/quickstart.py
https://github.com/googleworkspace/python-samples/tree/master/sheets
"""
from __future__ import print_function

import os.path

from google.auth.transport.requests import Request
from google.oauth2.credentials import Credentials
from google_auth_oauthlib.flow import InstalledAppFlow
from googleapiclient.discovery import build
from googleapiclient.errors import HttpError

# If modifying these scopes, delete the file token.json.
SCOPES = ['https://www.googleapis.com/auth/spreadsheets.readonly']
#SCOPES = ['https://www.googleapis.com/auth/script.projects', 'https://www.googleapis.com/auth/spreadsheets']

# The ID and range of a sample spreadsheet.
SAMPLE_SPREADSHEET_ID = '1BxiMVs0XRA5nFMdKvBdBZjgmUUqptlbs74OgvE2upms'
SAMPLE_RANGE_NAME = 'Class Data!A2:E'


def main():
	"""Shows basic usage of the Sheets API.
	Prints values from a sample spreadsheet.
	"""
	creds = None
	# The file token.json stores the user's access and refresh tokens, and is
	# created automatically when the authorization flow completes for the first
	# time.
	if os.path.exists('token.json'):
		creds = Credentials.from_authorized_user_file('token.json', SCOPES)
	# If there are no (valid) credentials available, let the user log in.
	if not creds or not creds.valid:
		if creds and creds.expired and creds.refresh_token:
			creds.refresh(Request())
		else:
			flow = InstalledAppFlow.from_client_secrets_file(
				'credentials.json', SCOPES)
			creds = flow.run_local_server(port=0)
		# Save the credentials for the next run
		with open('token.json', 'w') as token:
			token.write(creds.to_json())

	try:
		service = build('sheets', 'v4', credentials=creds)

		# Call the Sheets API
		sheet = service.spreadsheets()
		result = sheet.values().get(spreadsheetId=SAMPLE_SPREADSHEET_ID,
									range=SAMPLE_RANGE_NAME).execute()
		values = result.get('values', [])

		if not values:
			print('No data found.')
			return

		print('Name, Major:')
		for row in values:
			# Print columns A and E, which correspond to indices 0 and 4.
			print('%s, %s' % (row[0], row[4]))
	except HttpError as err:
		print(err)


if __name__ == '__main__':
	main()
--#

--% sheet/simple1/info
<HttpError 403 when requesting https://sheets.googleapis.com/v4/spreadsheets/1BxiMVs0XRA5nFMdKvBdBZjgmUUqptlbs74OgvE2upms/values/Class%20Data%21A2%3AE?alt=json returned "Google Sheets API has not been used in project 508006936218 before or it is disabled. 

Enable it by visiting https://console.developers.google.com/apis/api/sheets.googleapis.com/overview?project=508006936218 then retry. 

If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry.". 

Details: "[{'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Google developers console API activation', 'url': 'https://console.developers.google.com/apis/api/sheets.googleapis.com/overview?project=508006936218'}]}, {'@type': 'type.googleapis.com/google.rpc.ErrorInfo', 'reason': 'SERVICE_DISABLED', 'domain': 'googleapis.com', 'metadata': {'consumer': 'projects/508006936218', 'service': 'sheets.googleapis.com'}}]">
--#

--% appscript/simple1/info
b'{\n  "error": {\n    "code": 403,\n    "message": "Request had insufficient authentication scopes.",\n    "status": "PERMISSION_DENIED",\n    "details": [\n      {\n        "@type": "type.googleapis.com/google.rpc.ErrorInfo",\n        "reason": "ACCESS_TOKEN_SCOPE_INSUFFICIENT",\n        "domain": "googleapis.com",\n        "metadata": {\n          "method": "google.apps.script.management.v1.ProjectsService.CreateProject",\n          "service": "script.googleapis.com"\n        }\n      }\n    ]\n  }\n}\n'


googleapiclient.errors.HttpError: <HttpError 403 when requesting https://script.googleapis.com/v1/projects?alt=json returned "User has not enabled the Apps Script API. 

Enable it by visiting https://script.google.com/home/usersettings then retry. 

If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry.". 

Details: "[{'@type': 'type.googleapis.com/google.rpc.LocalizedMessage', 'locale': 'en-US', 'message': 'User has not enabled the Apps Script API. Enable it by visiting https://script.google.com/home/usersettings then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry.'}]">

==
C:\Users\usef\work\tmp\hapus>python main.py
https://script.google.com/d/105MG427gHrUAWNixPJQlKOScU4Q0oQRrHG6ZPTxLYb04qB3MSczYPOTn/edit

langkah
1. hapus token.json dari hasil spreadsheet, other api (krn mungkin scope berbeda)
2. enable google api script dari https://script.google.com/home/usersettings
--#
