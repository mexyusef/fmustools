--% index/fmus
__PWD,d
    .,d(/load=__FILE__=index_under_pwd*)
--#

--% index_under_pwd
.,d(/mk)
    main.go,f(e=__FILE__=main.go)
    run.sh,f(n=go run main.go)
    run.bat,f(n=go run main.go)
    info.txt,f(e=__FILE__=info.txt)
    $* more info.txt
    $* go run main.go
--#

--% main.go
package main

import (
	"crypto/rand"
	"fmt"
	"net/http"
)

// UUID is a custom multiplexer
type UUID struct {
}

func (p *UUID) ServeHTTP(w http.ResponseWriter, r *http.Request) {
	if r.URL.Path == "/" {
		giveRandomUUID(w, r)
		return
	}
	http.NotFound(w, r)
	return
}

func giveRandomUUID(w http.ResponseWriter, r *http.Request) {
	c := 10
	b := make([]byte, c)
	_, err := rand.Read(b)
	if err != nil {
		panic(err)
	}
	fmt.Fprintf(w, fmt.Sprintf("%x", b))
}

func main() {
	mux := &UUID{}
	http.ListenAndServe(":8000", mux)
}
--#

--% info.txt
localhost:8000/
	500e5b9f009874cdd0ba
--#
